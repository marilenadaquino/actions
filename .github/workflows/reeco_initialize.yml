name: initialize reeco

on: [push]
  # schedule:
  #   - cron: '25 9 * * *' # '0 0 * * 1' At 00:00 on Monday

jobs:
  build:
    runs-on: ubuntu-latest
    # outputs:
    #   matrix-repos: ${{ steps.split_repos.outputs.matrix-repos }}
    steps:

      - name: checkout repo content
        uses: actions/checkout@v3

      - name: check if repositories.txt exists in this repo
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "repositories.txt"

      - name: repositories.txt exists, read content
        if: steps.check_files.outputs.files_exists == 'true'
        id: read_content
        uses: juliangruber/read-file-action@v1
        with:
          path: ./repositories.txt

      - name: grep md file from repositories in repositories.txt
        if: ${{ success() }}
        id: split_repos
        # run: |
        #   conts=${{ steps.read_content.outputs.content }}
        #   echo "::set-output name=matrix-repos::[\"${conts//'\n '/\" \"}\"]"
        env:
        ACCESS_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          while IFS= read -r line; do
            echo "Text read from file: $line"
              IN="$line"
              arrIN=(${IN//:/ })
              repo=${arrIN[0]}
              version=${arrIN[2]}
              echo "repo: $repo"
              echo "version: $version"
              [ -d "content/_$repo" ] || git clone -n "https://$ACCESS_TOKEN@github.com/$repo" "content/_$repo"
              cd "content/_$repo"
              git ls-tree -r "$version" --full-tree --name-only | grep "\.md" > files.tmp
              while IFS= read -r line; do
                git checkout "$version" "$line"
              done < files.tmp
              rm files.tmp
              rm -rf .git
              cd -
          done < repositories.txt

      - name: repositories.txt does not exist, check if an issue already exists
        if: steps.check_files.outputs.files_exists == 'false'
        uses: nickderobertis/check-if-issue-exists-action@master
        id: check_if_issue_exists
        with:
          repo: ${{secrets.MY_REPO}}
          token: ${{ secrets.MY_TOKEN }}
          title: missing repositories.txt
          labels: bug

      - name: repositories.txt and issue do not exist, create issue
        if: steps.check_if_issue_exists.outputs.exists == 'false'
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
        with:
          filename: .github/initialize.md

# todo : check if an issue already exists before opening a new one!

# todo
# - name: setup python
#   uses: actions/setup-python@v4
#   with:
#     python-version: '3.9' # install the python version needed
# - name: install python packages
#   run: |
#     python -m pip install --upgrade pip
#     pip install -r requirements.txt
# - name: execute py script # run main.py
#   run: python initialize.py
