terms:
  bibliography:
    constraint: N
    description: "List of bibliographic references that are relevant to the component\
      \ but that do not fall under a specific category. \nUse \"scientific work\"\
      \ for the main scholarly publication related to the component"
    domain:
    - Component
    example-values: "bibliography:\n  - main-publication: full citation\n  - technical-report:\n\
      \    - http://doi.org/10.xxxx \n  - deliverable-document: \n    - http://something.pdf "
    id: bibliography
    label: bibliography
    mandatory: N
    ro-crate: cito:citesForInformation
    schema: https://schema.org/citation
    spar: cito:isCreditedBy
    unique: N
    xsd-datatype: string, anyURI
    yaml-type: List.Dictionary
  changelog:
    constraint: Y
    description: Link to a Changelog document, a file which contains a chronologically
      ordered list of notable changes for each version of the component.
    domain:
    - Component
    example-values: https://github.com/SPARQL-Anything/sparql.anything/releases
    id: changelog
    label: changelog
    mandatory: N
    regex: ^http[s]?://.+$
    ro-crate: discussionUrl
    schema: https://schema.org/discussionUrl
    spar: cito:isDocumentedBy
    unique: N
    xsd-datatype: anyURI
    yaml-type: String
  component-id:
    constraint: N
    description: The ID of the component in the Ecosystem. Can be a local identifier
      or a URI.
    domain:
    - Component
    example-values: 'my-dataset '
    id: component-id
    label: component ID
    mandatory: Y
    regex: '[^\s]+(/[^\s]+(/[^\s]+)?)?'
    schema: https://schema.org/identifier
    spar: dcterms:identifier
    unique: Y
    xsd-datatype: string
    yaml-type: String
  contributors:
    constraint: Y
    description: 'A list of contributors in the form: "Name <name.surname@mail.com>"'
    domain:
    - Component
    example-values: '- John Doe <john@doe.com>

      - Mick1234 <mick1234@mail.com>

      - Fabio009 <http://fabio009.com>

      - github/enridaga

      - Name Surname

      - Name Surname <email>

      - Name Surname <URI>

      - Name Surname <URI> <ORCID>

      - Name Surname <URI|email|ORCID>*'
    id: contributors
    label: contributors
    mandatory: N
    regex: TODO
    ro-crate: contributor
    schema: "could be several\nhttps://schema.org/accountablePerson\nhttps://schema.org/author\
      \ \nhttps://schema.org/contributor"
    spar: 'dcterms:creator

      dcterms:contributor'
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  deliverable-document:
    constraint: N
    description: Link to the deliverable document related to this component
    domain:
    - Component
    id: deliverable-document
    label: deliverable document
    mandatory: N
    ro-crate: cito:isDocumentedBy
    schema: https://schema.org/subjectOf
    spar: cito:isDocumentedBy
    super-term: bibliography
    unique: N
    xsd-datatype: string, anyURI
    yaml-type: List.String
  demo:
    constraint: Y
    description: Link to an online demo of the component
    domain:
    - Component
    example-values: 'http://data.open.ac.uk/sparql-demo '
    id: demo
    label: demo
    mandatory: N
    regex: ^http[s]?://.+$
    ro-crate: workExample
    schema: https://schema.org/workExample
    spar: fabio:isManifestationOf
    unique: N
    xsd-datatype: anyURI
    yaml-type: String
  description:
    constraint: N
    description: A text describing the component
    domain:
    - Component
    example-values: musoW is the registry of musical resources on the Web.
    id: description
    label: description
    mandatory: Y
    ro-crate: description
    schema: 'https://schema.org/abstract '
    spar: dcterms:description
    unique: N
    xsd-datatype: string
    yaml-type: String
  documentation:
    constraint: N
    description: 'Link to the documentation of the component. '
    domain:
    - Component
    id: documentation
    label: documentation
    mandatory: N
    ro-crate: cito:isDocumentedBy
    schema: https://schema.org/subjectOf
    spar: cito:isDocumentedBy
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  doi:
    constraint: Y
    description: The DOI of the GitHub repository related to this component, e.g.
      as published on Zenodo.org
    domain:
    - Component
    example-values: http://doi.org/10.xxxxxx
    id: doi
    label: DOI
    mandatory: N
    regex: ^http[s]?://.+$
    ro-crate: identifier
    unique: N
    xsd-datatype: anyURI
    yaml-type: String
  evaluated-in:
    constraint: N
    description: Link to a document (e.g. a user study) or source code demonstrating
      the validity of the component.
    domain:
    - Component
    id: evaluated-in
    label: evaluated in
    mandatory: N
    ro-crate: cito:isSupportedBy
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  extends-software:
    constraint: N
    description: Link to a software that is extended by the current component. Can
      be a component or an external software.
    domain:
    - Component
    id: extends-software
    label: extends
    mandatory: N
    ro-crate: cito:extends
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  funder:
    constraint: N
    description: The name of the funding body of the project and the URL
    domain:
    - Project
    example-values: "funder:\n- name: H2020\n  url: www.example.org\n  grant-agreement:\
      \ ABC123456\n- name: AHRC\n  url: www.another.org\n  grant-agreement: ABC234"
    id: funder
    label: funder
    mandatory: N
    ro-crate: funder[Organization]
    schema: https://schema.org/funder
    spar: "frapo:isOutputOf (Investigation) \n> frapo:isEnabledBy (Project) \n> frapo:isFundedBy\
      \ (Grant) \n> frapo:isAwardedBy (Funding Agency) "
    unique: N
    yaml-type: List.Dictionary
  generated-by:
    constraint: N
    description: Link to a software, dataset, or any other component that produced
      or generated the current component.
    domain:
    - Component
    id: generated-by
    label: generated by
    mandatory: N
    ro-crate: cito:isCompiledBy
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  grant-agreement:
    constraint: N
    description: Identifier of the grant agreement relative to the funding organisation
    domain:
    - Project
    example-values: ABC123456
    id: grant-agreement
    label: grant agreement
    mandatory: N
    ro-crate: funder[Organization]/funding[Grant]/identifier
    schema: https://schema.org/funding
    spar: "frapo:isOutputOf (Investigation) \n> frapo:isEnabledBy (Project) \n> frapo:isFundedBy\
      \ (Grant) \n> frapo:hasGrantNumber "
    super-term: funder
    unique: N
    xsd-datatype: string
    yaml-type: String
  has-part:
    constraint: Y
    description: List of components that are parts of this project. Refer to components
      with organisation, repo and local id of the component
    domain:
    - Project
    - Work Package
    - Pilot
    - Task
    example-values: 'has-part:

      - polifonia/musow/my-dataset

      - polifonia/meetups/my-dataset

      - other/repo/my-dataset'
    id: has-part
    label: has part
    mandatory: N
    regex: '[^\s]+(/[^\s]+(/[^\s]+)?)?'
    ro-crate: 'hasPart '
    unique: N
    xsd-datatype: string
    yaml-type: List.String
  image:
    constraint: N
    description: Link to one reference image illustrating the component
    domain:
    - Component
    example-values: "./image.jpg \nor\nhttp://www.example.org/image.jpg"
    id: image
    label: image
    mandatory: N
    ro-crate: image
    schema: https://schema.org/image
    spar: cito:isDocumentedBy
    unique: N
    xsd-datatype: anyURI
    yaml-type: String
  informed-by:
    constraint: N
    description: The component was informed by another component (or resource), for
      example, a requirements document or a Persona, a Story, a use case, etc...
    domain:
    - Component
    id: informed-by
    label: informed by
    mandatory: N
    ro-crate: prov:wasInformedBy
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  licence:
    constraint: N
    description: Link to a licence document of the resource, or a string pointing
      to one of the supported licences in the Reeco framework.
    domain:
    - Component
    example-values: '- CC-BY

      - https://creativecommons.org/licenses/by/4.0/'
    id: licence
    label: licence
    mandatory: N
    ro-crate: license
    schema: https://schema.org/license
    spar: dcterms:license
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  logo:
    constraint: Y
    description: Logo of the component in Web format. Accepted image formats are JPEG
      and PNG.
    domain:
    - Component
    example-values: https://avatars.githubusercontent.com/u/79987779?s=200&v=4
    id: logo
    label: logo
    mandatory: N
    regex: ^http[s]?://.+$
    ro-crate: logo
    schema: https://schema.org/logo
    unique: N
    xsd-datatype: anyURI
    yaml-type: String
  main-publication:
    constraint: N
    description: The primary, peer reviewed scientific publication related to this
      component (if non peer-reviewed, use technical-report instead).
    domain:
    - Component
    id: main-publication
    label: "main \npublication"
    mandatory: N
    ro-crate: cito:isReferencedBy
    super-term: bibliography
    unique: N
    xsd-datatype: string, anyURI
    yaml-type: String
  main-report:
    constraint: N
    description: The primary document related to this component (if peer-reviewed
      publication, use scientific-work instead).
    domain:
    - Component
    id: main-report
    label: main technical report
    mandatory: N
    ro-crate: cito:isDocumentedBy
    super-term: bibliography
    unique: N
    xsd-datatype: string, anyURI
    yaml-type: String
  name:
    constraint: N
    description: The name of the component
    domain:
    - Component
    example-values: musoW
    id: name
    label: name
    mandatory: Y
    ro-crate: name
    schema: https://schema.org/name
    spar: dcterms:title
    unique: N
    xsd-datatype: string
    yaml-type: String
  persona:
    constraint: N
    description: Link to one or more persona. This term is a specialisation of 'informed-by'.
    domain:
    - Component
    id: persona
    label: persona
    mandatory: N
    ro-crate: prov:wasInformedBy
    schema: https://schema.org/assesses
    spar: cito:obtainsBackgroundFrom
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  pilot:
    constraint: N
    description: A pilot application or case study
    domain:
    - Component
    example-values: '- MEETUPS

      - BELLS'
    id: pilot
    label: pilot
    mandatory: N
    ro-crate: isPartOf
    schema: https://schema.org/isPartOf
    spar: frbr:partOf
    unique: N
    xsd-datatype: string
    yaml-type: List.String
  produces-data:
    constraint: N
    description: Link to a dataset that is produced by the current component (e.g.
      an algorithm for generative text). Can be a component or an external dataset.
    domain:
    - Component
    id: produces-data
    label: "produces \ndataset"
    mandatory: N
    ro-crate: cito:compiles
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  project:
    constraint: Y
    description: The local id of the project
    domain:
    - Component
    example-values: '- polifonia'
    id: project
    label: project
    mandatory: N
    ro-crate: isPartOf
    unique: N
    xsd-datatype: string
    yaml-type: List.String
  project-id:
    constraint: Y
    description: Local identifier of the project
    domain:
    - Project
    example-values: polifonia
    id: project-id
    label: project identifier
    mandatory: Y
    regex: '[^\s]+(/[^\s]+(/[^\s]+)?)?'
    ro-crate: '@ id '
    unique: Y
    xsd-datatype: string
    yaml-type: String
  published-in:
    constraint: N
    description: Link to a meaningful venue where the current component is served
      or published (e.g. a dataset published on a web portal).
    domain:
    - Component
    id: published-in
    label: published in
    mandatory: N
    ro-crate: publisher
    super-term: bibliography
    unique: N
    xsd-datatype: string, anyURI
    yaml-type: List.String
  related-component:
    constraint: N
    description: List of components that are related to this one. Use a subproperty
      when applicable.
    domain:
    - Component
    example-values: "related-component:\n- informed-by: component-local-11\n- use-case:\
      \ \n   - component-local-12\n   - component-local-13\n- story: [ story1, story2\
      \ ]"
    id: related-component
    label: "related \ncomponent"
    mandatory: N
    ro-crate: isRelatedTo
    schema: "could be several:\nhttps://schema.org/supportingData \nhttps://schema.org/isBasedOn\n\
      https://schema.org/usageInfo "
    spar: 'cito:usesDataFrom / cito:providesDataFor

      cito:usesMethodIn / cito:providesMethodFor

      cito:isExtendedBy / cito:extends'
    unique: N
    xsd-datatype: Component
    yaml-type: List.Dictionary
  release-date:
    constraint: Y
    description: The date the component was released. Accepted values include any
      valid XSD date.
    domain:
    - Component
    example-values: "2022-02-02 \nor \n2020-01-10T12:00:00"
    id: release-date
    label: "release \ndate"
    mandatory: N
    ro-crate: releaseDate
    schema: 'https://schema.org/releasedEvent / https://schema.org/startDate '
    spar: dcterms:issued
    unique: N
    xsd-datatype: date
    yaml-type: String
  release-link:
    constraint: Y
    description: Link to access or download the component release
    domain:
    - Component
    example-values: https://github.com/SPARQL-Anything/sparql.anything/releases/tag/v0.8.1
    id: release-link
    label: release link
    mandatory: N
    regex: ^http[s]?://.+$
    ro-crate: downloadUrl
    schema: https://schema.org/releasedEvent / https://schema.org/releaseNotes
    spar: fabio:hasURL
    unique: N
    xsd-datatype: anyURI
    yaml-type: String
  release-number:
    constraint: N
    description: 'Version number of the release. Any value is permitted, although
      we recommend semantic versioning: https://semver.org/'
    domain:
    - Component
    example-values: v0.1
    id: release-number
    label: "release \nnumber"
    mandatory: N
    ro-crate: version
    schema: https://schema.org/releasedEvent / https://schema.org/softwareVersion
    spar: prism:versionIdentifier
    unique: N
    xsd-datatype: string
    yaml-type: String
  resource:
    constraint: N
    description: The digital resource representing the component (e.g. if the component
      is of type Dataset, it may be my-dataset.csv or a folder in the repository).
      It includes the path to a file (if 1 file), the path to a folder (if many files),
      or absolute URL of an online file (DOI cannot be used)
    domain:
    - Component
    example-values: "./data.csv \nhttp://www.example.org/myFile.json \n./data/"
    id: resource
    label: resource
    mandatory: N
    ro-crate: '@ id '
    unique: Y
    xsd-datatype: string,anyURI
    yaml-type: String
  reused-in:
    constraint: N
    description: Link to a software, dataset, or any other component that reuses the
      current component.
    domain:
    - Component
    id: reused-in
    label: reused in
    mandatory: N
    ro-crate: cito:providesMethodFor
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  reuses-data:
    constraint: N
    description: Link to a dataset that is reused by the current component. Can be
      a component or an external dataset.
    domain:
    - Component
    id: reuses-data
    label: "reuses \ndataset"
    mandatory: N
    ro-crate: cito:usesDataFrom
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  reuses-software:
    constraint: N
    description: Link to a software that is reuses as-is by the current component.
      Can be a component or an external software.
    domain:
    - Component
    id: reuses-software
    label: "reuses \nsoftware"
    mandatory: N
    ro-crate: cito:usesMethodIn
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  ro-crate:
    constraint: Y
    description: Specifies whether this yaml file is the reference file for creating
      a RO crate.
    domain:
    - Project
    - Work Package
    - Pilot
    - Task
    enum:
    - 'true'
    - 'false'
    example-values: '- ro-crate:true'
    id: ro-crate
    label: ro crate
    mandatory: N
    ro-crate: isPartOf
    unique: N
    xsd-datatype: boolean
    yaml-type: Boolean
  running-instance:
    constraint: Y
    description: Link to a running instance of the component (e.g. a software or service)
      on the Web.
    domain:
    - Component
    example-values: http://data.open.ac.uk/sparql
    id: running-instance
    label: "running \ninstance"
    mandatory: N
    regex: ^http[s]?://.+$
    ro-crate: url
    spar: fabio:isManifestationOf
    unique: N
    xsd-datatype: anyURI
    yaml-type: String
  serves-data:
    constraint: N
    description: Link to a dataset that is served by the current component (e.g. an
      API). Can be a component or an external dataset.
    domain:
    - Component
    id: serves-data
    label: "serves data \nfrom"
    mandatory: N
    ro-crate: cito:providesDataFor
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  story:
    constraint: N
    description: Link to one or more user stories. This term is a specialisation of
      'informed-by'.
    domain:
    - Component
    id: story
    label: story
    mandatory: N
    ro-crate: prov:wasInformedBy
    schema: https://schema.org/assesses
    spar: cito:obtainsBackgroundFrom
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  type:
    constraint: Y
    description: The component type, according to the list of components available
      in Reeco.
    domain:
    - Component
    enum:
    - Component
    - Dataset
    - Registry
    - RequirementsCollection
    - Workflow
    - Software
    - Service
    - Tutorial
    - Web site
    - Survey
    - EcosystemWebsite
    - SoftwareLibrary
    - DockerImageContainer
    - RunningInstance
    - Ontology
    - Notebook
    - Script
    - KnowledgeGraph
    - InPresenceSurvey
    - FocusGroup
    - Story
    - Persona
    - Report
    - Deliverable
    - Documentation
    - EvaluationReport
    example-values: 'Dataset, Project, Registry, Workflow, Software

      (see component types)'
    id: type
    label: type
    mandatory: Y
    ro-crate: '@ type '
    schema: https://schema.org/applicationCategory
    spar: rdf:type
    unique: N
    xsd-datatype: string
    yaml-type: String
  url:
    constraint: Y
    description: Link to the funder organisation web site
    domain:
    - Project
    id: url
    label: funder URL
    mandatory: N
    regex: ^http[s]?://.+$
    ro-crate: funder[Organization]/url
    super-term: funder
    unique: N
    xsd-datatype: anyURI
    yaml-type: String
  use-case:
    constraint: N
    description: Link to one or more use cases. This term is a specialisation of 'informed-by'
    domain:
    - Component
    id: use-case
    label: use case
    mandatory: N
    ro-crate: prov:wasInformedBy
    schema: https://schema.org/assesses
    spar: cito:obtainsBackgroundFrom
    super-term: related-component
    unique: N
    xsd-datatype: string,anyURI
    yaml-type: List.String
  work-package:
    constraint: N
    description: The work package associated to this component, if any.
    domain:
    - Component
    example-values: "- polifonia\n - WP1\n - WP5"
    id: work-package
    label: "work \npackage"
    mandatory: N
    ro-crate: isPartOf
    schema: https://schema.org/isPartOf
    spar: frbr:partOf
    unique: N
    xsd-datatype: 'string '
    yaml-type: List.String
types:
  Component:
    id: Component
    label: Component
    sub-class-of: frapo:MaterialOutput
    supertype-id: Project Output
  Dataset:
    id: Dataset
    label: Dataset
    sub-class-of: fabio:Dataset
    supertype-id: Component
  Deliverable:
    id: Deliverable
    label: Deliverable
    sub-class-of: fabio:ProjectReport
    supertype-id: 'Report '
  DockerImageContainer:
    id: DockerImageContainer
    label: Docker Image Container
    sub-class-of: fabio:ComputerApplication
    supertype-id: Software
  Documentation:
    id: Documentation
    label: Documentation
    sub-class-of: fabio:InstructionalWork
    supertype-id: Report
  EcosystemWebsite:
    id: EcosystemWebsite
    label: Ecosystem Website
    sub-class-of: fabio:Wiki ?
    supertype-id: Web site
  EvaluationReport:
    id: EvaluationReport
    label: Evaluation Report
    supertype-id: Report
  FocusGroup:
    id: FocusGroup
    label: Focus Group
    sub-class-of: fabio:Questionnaire
    supertype-id: Survey
  InPresenceSurvey:
    id: InPresenceSurvey
    label: In presence survey
    sub-class-of: fabio:Questionnaire
    supertype-id: Survey
  KnowledgeGraph:
    id: KnowledgeGraph
    label: Knowledge Graph
    sub-class-of: fabio:Dataset
    supertype-id: Data
  Notebook:
    id: Notebook
    label: Notebook
    sub-class-of: fabio:Script
    supertype-id: Software
  Ontology:
    id: Ontology
    label: Ontology
    sub-class-of: fabio:Ontology
    supertype-id: Software
  Persona:
    id: Persona
    label: Persona
    sub-class-of: fabio:MetadataDocument
    supertype-id: Requirements Collection
  Pilot:
    id: Pilot
    label: Pilot
    sub-class-of: frapo:Investigation
    supertype-id: prov:Activity
  Project:
    id: Project
    is-ro-crate: Y
    label: Project
    sub-class-of: prov:Activity
  ProjectOutput:
    id: ProjectOutput
    label: Project Output
    sub-class-of: frapo:Output
    supertype-id: owl:Thing
  Publication:
    id: Publication
    label: Publication
    sub-class-of: "fabio:JournalArticle \nfabio:Book"
    supertype-id: Project Output
  Registry:
    id: Registry
    label: Registry
    sub-class-of: fabio:Catalog
    supertype-id: Component
  Report:
    id: Report
    label: Report
    sub-class-of: fabio:Report
    supertype-id: Project Output
  RequirementsCollection:
    id: RequirementsCollection
    label: Requirements Collection
    sub-class-of: fabio:Specification
    supertype-id: Component
  RunningInstance:
    id: RunningInstance
    label: Running Instance
    sub-class-of: fabio:ComputerApplication
    supertype-id: Software
  Script:
    id: Script
    label: Script
    sub-class-of: fabio:Script
    supertype-id: Software
  Service:
    id: Service
    label: Service
    sub-class-of: fabio:API ?
    supertype-id: Component
  Software:
    id: Software
    label: Software
    sub-class-of: fabio:ComputerProgram
    supertype-id: Component
  SoftwareLibrary:
    id: SoftwareLibrary
    label: Software Library
    sub-class-of: fabio:Script
    supertype-id: Software
  Story:
    id: Story
    label: Story
    sub-class-of: fabio:MetadataDocument
    supertype-id: Requirements Collection
  Survey:
    id: Survey
    label: Survey
    sub-class-of: fabio:Questionnaire
    supertype-id: Component
  Task:
    id: Task
    label: Task
    sub-class-of: frapo:Investigation
    supertype-id: prov:Activity
  Tutorial:
    id: Tutorial
    label: Tutorial
    sub-class-of: fabio:InstructionalWork
    supertype-id: Component
  UseCase:
    id: UseCase
    label: Use Case
    sub-class-of: frapo:Investigation
    supertype-id: prov:Activity
  Web site:
    id: Web site
    label: Web site
    sub-class-of: fabio:WebSite
    supertype-id: Component
  WorkPackage:
    id: WorkPackage
    label: Work Package
    sub-class-of: fabio:WorkPackage
    supertype-id: prov:Activity
  Workflow:
    id: Workflow
    label: Workflow
    supertype-id: Component
  WorkingGroup:
    id: WorkingGroup
    label: Working Group
    sub-class-of: frapo:Division / frapo:ResearchGroup
    supertype-id: prov:Agent
